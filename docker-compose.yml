version: "3.8"

services:
  reverse-proxy:
    image: nginx:latest
    ports:
      - "8180:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user_service
      - department_service

  test-runner:
    image: golang:1.23
    privileged: true
    environment:
      - DOCKER_HOST=tcp://dind:2375
    working_dir: /app
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c " go mod tidy && go test -v ./integration_test/...  "

  user_service:
    env_file: .env_local
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - DB=${DB}
      - DB_MAX_IDLE=${DB_MAX_IDLE}
      - DB_MAX_OPEN=${DB_MAX_OPEN}
      - DB_MAX_LIFE_TIME=${DB_MAX_LIFE_TIME}
      - DB_MAX_IDLE_TIME=${DB_MAX_IDLE_TIME}
      - ZAP_CONF=${ZAP_CONF}
      - GORM_CONF=${GORM_CONF}
      - PPROF_ENABLE=${PPROF_ENABLE}
      - POINT_SRVC_ADDR=${POINT_SRVC_ADDR}
      - POINT_SRVC_MAX=${POINT_SRVC_MAX}
    build:
      context: .
      dockerfile: service/user_service/Dockerfile
      no_cache: true
      args:
        - logLevelEnvVar=${LOG_LEVEL}
        - databaseURLEnvVar=${DATABASE_URL}
        - portEnvVar=${PORT}
        - dBEnvVar=${DB}
        - dBMaxIdleEnvVar=${DB_MAX_IDLE}
        - dBMaxOpenEnvVar=${DB_MAX_OPEN}
        - dBMaxLifeTimeEnvVar=${DB_MAX_LIFE_TIME}
        - dBMaxIdleTimeEnvVar=${DB_MAX_IDLE_TIME}
        - zapConf=${ZAP_CONF}
        - gormConf=${GORM_CONF}
        - pprofEnable=${PPROF_ENABLE}
        - pointSrvcAddrEnvVar=${POINT_SRVC_ADDR}
        - pointSrvcMaxEnvVar=${POINT_SRVC_MAX}
    ports:
      - "5001:8185"
    volumes:
      - /config/gorm-logger-config.json:/config/gorm-logger-config.json
      - /config/zap-logger-config.json:/config/zap-logger-config.json
    depends_on:
      - db

  department_service:
    env_file: .env_local
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - DB=${DB}
      - DB_MAX_IDLE=${DB_MAX_IDLE}
      - DB_MAX_OPEN=${DB_MAX_OPEN}
      - DB_MAX_LIFE_TIME=${DB_MAX_LIFE_TIME}
      - DB_MAX_IDLE_TIME=${DB_MAX_IDLE_TIME}
      - ZAP_CONF=${ZAP_CONF}
      - GORM_CONF=${GORM_CONF}
      - PPROF_ENABLE=${PPROF_ENABLE}
      - POINT_SRVC_ADDR=${POINT_SRVC_ADDR}
      - POINT_SRVC_MAX=${POINT_SRVC_MAX}
    build:
      context: .
      dockerfile: service/department_service/Dockerfile
      no_cache: true
      args:
        - logLevelEnvVar=${LOG_LEVEL}
        - databaseURLEnvVar=${DATABASE_URL}
        - portEnvVar=${PORT}
        - dBEnvVar=${DB}
        - dBMaxIdleEnvVar=${DB_MAX_IDLE}
        - dBMaxOpenEnvVar=${DB_MAX_OPEN}
        - dBMaxLifeTimeEnvVar=${DB_MAX_LIFE_TIME}
        - dBMaxIdleTimeEnvVar=${DB_MAX_IDLE_TIME}
        - zapConf=${ZAP_CONF}
        - gormConf=${GORM_CONF}
        - pprofEnable=${PPROF_ENABLE}
        - pointSrvcAddrEnvVar=${POINT_SRVC_ADDR}
        - pointSrvcMaxEnvVar=${POINT_SRVC_MAX}
    ports:
      - "5002:8185"
    volumes:
      - /config/gorm-logger-config.json:/config/gorm-logger-config.json
      - /config/zap-logger-config.json:/config/zap-logger-config.json
    depends_on:
      - db

  point_service:
    env_file: .env_local
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - DB=${DB}
      - DB_MAX_IDLE=${DB_MAX_IDLE}
      - DB_MAX_OPEN=${DB_MAX_OPEN}
      - DB_MAX_LIFE_TIME=${DB_MAX_LIFE_TIME}
      - DB_MAX_IDLE_TIME=${DB_MAX_IDLE_TIME}
      - ZAP_CONF=${ZAP_CONF}
      - GORM_CONF=${GORM_CONF}
      - PPROF_ENABLE=${PPROF_ENABLE}
      - POINT_SRVC_ADDR=${POINT_SRVC_ADDR}
      - POINT_SRVC_MAX=${POINT_SRVC_MAX}
    build:
      context: .
      dockerfile: service/point_service/Dockerfile
      no_cache: true
      args:
        - logLevelEnvVar=${LOG_LEVEL}
        - databaseURLEnvVar=${DATABASE_URL}
        - portEnvVar=${PORT}
        - dBEnvVar=${DB}
        - dBMaxIdleEnvVar=${DB_MAX_IDLE}
        - dBMaxOpenEnvVar=${DB_MAX_OPEN}
        - dBMaxLifeTimeEnvVar=${DB_MAX_LIFE_TIME}
        - dBMaxIdleTimeEnvVar=${DB_MAX_IDLE_TIME}
        - zapConf=${ZAP_CONF}
        - gormConf=${GORM_CONF}
        - pprofEnable=${PPROF_ENABLE}
        - pointSrvcAddrEnvVar=${POINT_SRVC_ADDR}
        - pointSrvcMaxEnvVar=${POINT_SRVC_MAX}
    ports:
      - "5003:8185"
    volumes:
      - /config/gorm-logger-config.json:/config/gorm-logger-config.json
      - /config/zap-logger-config.json:/config/zap-logger-config.json
    depends_on:
      - db

  db:
    image: postgres:latest
    ports:
      - "5430:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - ./database/migration.sql:/docker-entrypoint-initdb.d/migration.sql
      - db_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - reverse-proxy
      - user_service
      - department_service
      - point_service

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://reverse-proxy:80/stub_status'
    depends_on:
      - reverse-proxy

  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - "3001:3000"
volumes:
  db_data: